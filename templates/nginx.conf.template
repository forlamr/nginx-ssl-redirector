# Simple nginx configuration for SSL proxy to Azure IoT Hub
# Listens on port 8883 (SSL) and proxies to IotHub

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 4096;

events {
    worker_connections 2048;
}

stream {
    # Upstream definition for Azure IoT Hub
    upstream azure_iothub {
        server ${IOTHUB_HOSTNAME}:8883;
    }

    log_format basic '[$time_local] $remote_addr'
                '$protocol $status $bytes_sent $bytes_received '
                '$session_time';
    
    # SSL proxy server block
    server {
        listen 8883 ssl;
        
        # SSL certificate configuration
        ssl_certificate /etc/ssl/certs/nginx-cert.crt;
        ssl_certificate_key /etc/ssl/private/nginx-cert.key;

        access_log /dev/stdout basic;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        #ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        #ssl_prefer_server_ciphers off;
        
        # Proxy settings
        proxy_pass azure_iothub;
        proxy_connect_timeout 10s;
        proxy_timeout 24h;
        
        # Enable SSL when connecting to upstream
        proxy_ssl on;
        proxy_ssl_verify off;  # Set to 'on' if you want to verify the upstream certificate
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
    }
}

# Optional HTTP block for basic nginx functionality
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '[$time_local] $remote_addr - $remote_user "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    
    # Basic server for health checks (optional)
    server {
        listen 80;
        listen 443 ssl;

        # SSL certificate configuration
        ssl_certificate /etc/ssl/certs/nginx-cert.crt;
        ssl_certificate_key /etc/ssl/private/nginx-cert.key;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
